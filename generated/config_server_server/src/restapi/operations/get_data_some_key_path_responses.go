package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-swagger/go-swagger/httpkit"

	"models"
)

/*GetDataSomeKeyPathOK the JSON that was added for that path

swagger:response getDataSomeKeyPathOK
*/
type GetDataSomeKeyPathOK struct {

	// In: body
	Payload *models.Data `json:"body,omitempty"`
}

// NewGetDataSomeKeyPathOK creates GetDataSomeKeyPathOK with default headers values
func NewGetDataSomeKeyPathOK() *GetDataSomeKeyPathOK {
	return &GetDataSomeKeyPathOK{}
}

// WithPayload adds the payload to the get data some key path o k response
func (o *GetDataSomeKeyPathOK) WithPayload(payload *models.Data) *GetDataSomeKeyPathOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get data some key path o k response
func (o *GetDataSomeKeyPathOK) SetPayload(payload *models.Data) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetDataSomeKeyPathOK) WriteResponse(rw http.ResponseWriter, producer httpkit.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetDataSomeKeyPathDefault Unexpected error

swagger:response getDataSomeKeyPathDefault
*/
type GetDataSomeKeyPathDefault struct {
	_statusCode int

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetDataSomeKeyPathDefault creates GetDataSomeKeyPathDefault with default headers values
func NewGetDataSomeKeyPathDefault(code int) *GetDataSomeKeyPathDefault {
	if code <= 0 {
		code = 500
	}

	return &GetDataSomeKeyPathDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get data some key path default response
func (o *GetDataSomeKeyPathDefault) WithStatusCode(code int) *GetDataSomeKeyPathDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get data some key path default response
func (o *GetDataSomeKeyPathDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get data some key path default response
func (o *GetDataSomeKeyPathDefault) WithPayload(payload *models.Error) *GetDataSomeKeyPathDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get data some key path default response
func (o *GetDataSomeKeyPathDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetDataSomeKeyPathDefault) WriteResponse(rw http.ResponseWriter, producer httpkit.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
